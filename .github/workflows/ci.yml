name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:
    inputs:
      reupload_model:
        description: 'Force re-upload model (yes/no)'
        default: 'no'

jobs:
  test-build:
    runs-on: ubuntu-latest
    env:
      PROJECT_ID: ${{ secrets.PROJECT_ID }}
      REGION: ${{ secrets.REGION }}
      SERVICE: ${{ secrets.SERVICE }}
      REPO: ${{ secrets.REPO }}

    steps:
      # 1 — Check out repo
      - uses: actions/checkout@v4

      # 2 — Set up Python for unit tests
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      # 3 — Install Python dependencies & pytest
      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest

      # 4 — Run unit tests
      - name: Run unit tests
        run: pytest -q

      # 5 — Authenticate to Google Cloud
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      # 6 — Set up gcloud CLI
      - name: Set up gcloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}

      # 7 — Calculate local model hash (if exists)
      - name: Calculate local model hash
        id: hash
        run: |
          if [ -f models/best_tf_model.keras ]; then
            HASH_LOCAL=$(sha256sum models/best_tf_model.keras | awk '{print $1}')
            echo "hash_local=$HASH_LOCAL" >> $GITHUB_OUTPUT
          else
            echo "hash_local=none" >> $GITHUB_OUTPUT
          fi

      # 8 — Get remote model hash (if exists)
      - name: Get remote model hash
        id: remote
        run: |
          gsutil cp gs://bank-mlops-models/best_tf_model.keras remote_model.keras || echo "No remote model"
          if [ -f remote_model.keras ]; then
            HASH_REMOTE=$(sha256sum remote_model.keras | awk '{print $1}')
            echo "hash_remote=$HASH_REMOTE" >> $GITHUB_OUTPUT
          else
            echo "hash_remote=none" >> $GITHUB_OUTPUT
          fi

      # 9 — Conditional model upload
      - name: Conditional model upload
        if: ${{ github.event.inputs.reupload_model == 'yes' || steps.hash.outputs.hash_local != steps.remote.outputs.hash_remote }}
        run: |
          echo "Uploading model to GCS..."
          if [ -f models/best_tf_model.keras ]; then
            gsutil cp models/best_tf_model.keras gs://bank-mlops-models/
          else
            echo "No local model to upload, skipping."
          fi

      # 10 — Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 11 — Build Docker image using cache
      - name: Build Docker image with cache
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: false
          tags: bank-default-api:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # 12 — Build and push container to GCP
      - name: Build and push container to GCP
        run: |
          gcloud builds submit --tag $REGION-docker.pkg.dev/$PROJECT_ID/$REPO/bank-default-api:$GITHUB_SHA --quiet || echo "Build triggered, skipping log streaming error"

      # 13 — Deploy to Cloud Run
      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy $SERVICE \
            --image=$REGION-docker.pkg.dev/$PROJECT_ID/$REPO/bank-default-api:$GITHUB_SHA \
            --region=$REGION \
            --platform=managed \
            --memory=2Gi \
            --cpu=2 \
            --timeout=600s \
            --allow-unauthenticated \
            --update-env-vars MODEL_URL="https://storage.googleapis.com/bank-mlops-models/best_tf_model.keras"
